/* ----------------Discarded CSS --------------------*/

/* Old filter Tabs */

.filter-wrap {
  width: 100%;
  background-color: #fff;
  border-bottom: var(--sborder);
  justify-content: flex-start;
  align-items: flex-start;
  gap: 2rem;
  display: inline-flex;
} 
 .filter-tab {
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  gap: 0.375rem;
  display: inline-flex;
  padding-top: var(--m1);
  padding-left: var(--m1);
  padding-right: var(--m1);
  height: 2.25rem;
  border-radius: 0.125rem;
  cursor: pointer;
} 
 .filter-tab.active {
  border-bottom: 2px solid var(--main);
  color: var(--main);
}
.filter-tab:hover {
  color: var(--main);
}

/* ----------------Discarded React --------------------*/

/*  

// Editable Box Logic

<p
className={`text-[#252C32] text-sm lg:text-remove  font-remove poppins-remove whitespace-pre-wrap flex ${
  !isDescEditable ? "flex-row" : "flex-col"
} items-start gap-2`}
>
{isDescEditable ? (
  <input
    type="text"
    value={descriptionInput}
    className="border border-[#E5E9EB] w-40 lg:w-auto px-1"
    onChange={(e) => setDescriptionInput(e.target.value)}
  />
) : (
<span className="w-auto overflow-hidden text-ellipsis">
  {paymentDetails?.description
    ? paymentDetails?.description
    : "N/A"}
</span>
 )} 

{!isDescEditable && (
  <button onClick={handleDescriptionEdit}>
    <Image src={pencilsimple} alt="edit" className="" />
  </button>
)}
{isDescEditable && (
  <div className="flex items-center gap-4">
    <button
      className="bg-[#6200EE] text-[#F9F9F7]  flex items-center justify-center text-sm gap-3 h-6 w-20 rounded-md"
      type="button"
      onClick={handleDescriptionSubmit}
    >
      Submit
    </button>
    <button
      className="bg-[#6200EE] text-[#F9F9F7]  flex items-center justify-center gap-3 text-sm h-6 w-20 rounded-md"
      type="button"
      onClick={() => setIsDescEditable(false)}
    >
      Cancel
    </button>
  </div>
)}
</p> 



 */




